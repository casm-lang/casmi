#
#   Copyright (C) 2014-2021 CASM Organization <https://casm-lang.org>
#   All rights reserved.
#
#   Developed by: Philipp Paulweber
#                 Emmanuel Pescosta
#                 Florian Hahn
#                 <https://github.com/casm-lang/casmi>
#
#   This file is part of casmi.
#
#   casmi is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   casmi is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with casmi. If not, see <http://www.gnu.org/licenses/>.
#

# https://help.github.com/en/articles/virtual-environments-for-github-actions

name: nightly

on:
  schedule:
    - cron: '12 0 * * *'

jobs:
  # https://github.com/actions/virtual-environments/blob/main/images/linux
  linux-x86_64:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        tool:
        - build: release
          chain: gcc-10
    env:
      B: ${{ matrix.tool.build }}
      C: ${{ matrix.tool.chain }}
      G: ninja
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup
      run: |
        make info
        sudo apt-get update
        sudo apt-get install -y ninja-build
        make ci-tools
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        make ci-fetch
    - name: Dependencies
      run: |
        make ci-deps
    - name: Building
      run: |
        make ci-build
    - name: Tests
      run: |
        make ci-test
    - name: Benchmark
      run: |
        make ci-benchmark
    - name: Installation
      run: |
        make ci-install
    - name: Bundling
      run: |
        make ci-bundle
    - name: Persisting
      uses: actions/upload-artifact@v1
      with:
        name: linux
        path: obj/bundle

  # https://github.com/actions/virtual-environments/blob/main/images/macos
  darwin-x86_64:
    runs-on: macos-10.15
    strategy:
      matrix:
        tool:
        - build: release
          chain: gcc-11
    env:
      B: ${{ matrix.tool.build }}
      C: ${{ matrix.tool.chain }}
      G: ninja
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup
      run: |
        make info
        brew install ninja
        make ci-tools
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        make ci-fetch
    - name: Dependencies
      run: |
        make ci-deps
    - name: Building
      run: |
        make ci-build
    - name: Tests
      run: |
        make ci-test
    - name: Benchmark
      run: |
        make ci-benchmark
    - name: Installation
      run: |
        make ci-install
    - name: Bundling
      run: |
        make ci-bundle
    - name: Persisting
      uses: actions/upload-artifact@v1
      with:
        name: darwin
        path: obj/bundle

  # https://github.com/actions/virtual-environments/blob/main/images/win
  windows-x86_64:
    runs-on: windows-2019
    strategy:
      matrix:
        tool:
        - build: release
          chain: clang-12
    env:
      B: ${{ matrix.tool.build }}
      C: clang # ${{ matrix.tool.chain }}
      G: ninja
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup
      run: |
        make info
        echo "c:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        choco install ninja
        choco install zip
        make ci-tools
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        make ci-fetch
    - name: Dependencies
      run: |
        make ci-deps
    - name: Building
      run: |
        make ci-build
    - name: Tests
      run: |
        make ci-test
    - name: Benchmark
      run: |
        make ci-benchmark
    - name: Installation
      run: |
        make ci-install
    - name: Bundling
      run: |
        make ci-bundle
    - name: Persisting
      uses: actions/upload-artifact@v1
      with:
        name: windows
        path: obj/bundle
