#
#   Copyright (C) 2014-2019 CASM Organization <https://casm-lang.org>
#   All rights reserved.
#
#   Developed by: Philipp Paulweber
#                 Emmanuel Pescosta
#                 Florian Hahn
#                 <https://github.com/casm-lang/casmi>
#
#   This file is part of casmi.
#
#   casmi is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   casmi is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with casmi. If not, see <http://www.gnu.org/licenses/>.
#

# https://help.github.com/en/articles/virtual-environments-for-github-actions#supported-virtual-environments
#
# |---------+---------------------------------------------|
# | OS      | Version                                     |
# |---------+---------------------------------------------|
# | Linux   | ubuntu-18.04 (ubuntu-latest), ubuntu-16.04  |
# | MacOSX  | macOS-10.14 (macOS-latest)                  |
# | Windows | windows-2019 (windows-latest), windows-2016 |

name: build

on: [push]



jobs:
  linux-clang-debug:
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-16.04 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=clang fetch
    - name: Dependencies
      run:  |
        make C=clang debug-deps
    - name: Building
      run:  |
        make C=clang debug-build
    - name: Tests
      run:  |
        make C=clang debug-test
    - name: Benchmark
      run:  |
        make C=clang debug-benchmark

  linux-gcc-coverage:
    strategy:
      matrix:
        os: [ ubuntu-18.04 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=gcc fetch
    - name: Dependencies
      run:  |
        make C=gcc coverage-deps
    - name: Building
      run:  |
        make C=gcc coverage-build
    - name: Tests
      run:  |
        make C=gcc coverage-test
    - name: Benchmark
      run:  |
        make C=gcc coverage-benchmark
    - name: Coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run:  |
        wget https://codecov.io/bash
        chmod 755 bash
        ./bash

  darwin-clang-debug:
    strategy:
      matrix:
        os: [ macOS-10.14 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=clang fetch
    - name: Dependencies
      run:  |
        make C=clang debug-deps
    - name: Building
      run:  |
        make C=clang debug-build
    - name: Tests
      run:  |
        make C=clang debug-test
    - name: Benchmark
      run:  |
        make C=clang debug-benchmark

  darwin-gcc-debug:
    strategy:
      matrix:
        os: [ macOS-10.14 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run:  |
        brew --version
        brew install gcc@9
        ln -s /usr/local/bin/gcc-9 /usr/local/bin/gcc
        ln -s /usr/local/bin/g++-9 /usr/local/bin/g++
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=gcc fetch
    - name: Dependencies
      run:  |
        make C=gcc debug-deps
    - name: Building
      run:  |
        make C=gcc debug-build
    - name: Tests
      run:  |
        make C=gcc debug-test
    - name: Benchmark
      run:  |
        make C=gcc debug-benchmark

  windows-clang-debug:
    strategy:
      matrix:
        os: [ windows-2019, windows-2016 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run:  |
        choco install llvm
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=clang fetch
    - name: Dependencies
      run:  |
        refreshenv
        make C=clang debug-deps
    - name: Building
      run:  |
        refreshenv
        make C=clang debug-build
    - name: Tests
      run:  |
        refreshenv
        make C=clang debug-test
    - name: Benchmark
      run:  |
        refreshenv
        make C=clang debug-benchmark

  windows-gcc-debug:
    strategy:
      matrix:
        os: [ windows-2019 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run:  |
        make C=gcc fetch
    - name: Dependencies
      run:  |
        make C=gcc debug-deps
    - name: Building
      run:  |
        make C=gcc debug-build
    - name: Tests
      run:  |
        make C=gcc debug-test
    - name: Benchmark
      run:  |
        make C=gcc debug-benchmark
